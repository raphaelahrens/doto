#!/usr/bin/env python2
# -*- coding: utf-8 -*-

"""
The Done!Tools are a collection of tools to handle task and events.


doto add  "Title" "descripton"
doto ls
doto

"""

import argparse
import blessings
import cli
import cli.cmd
import cli.sub_cmds
import defaultconfig
import sys
import dbmodel
import util

EXIT_CODES = util.enum(unknown_cmd=1)


def init_env(commands):
    """
    Initialize the enviroment.

    This includes
        - the parser and subpurser,
        - and the enviroment variables.

    @param commands the modules of the cli commands

    """
    parser = argparse.ArgumentParser(prog="doto", description="The Done!Tools are a collection of tools to handle task and events.")
    subparsers = parser.add_subparsers(help='command', dest="cmd")
    for cmd in commands:
        cmd.init_parser(subparsers)
    return parser.parse_args()


def main():
    """
    The main function.

    It initialises the eviroment,
    parses the command line arguments,
    and executes the gvien command.

    """

    # Init phase
    cmds = cli.sub_cmds.import_commands(cli.cmd.__path__, cli.cmd.__name__)
    config = defaultconfig.read_config()
    args = init_env(cmds.values())
    cli.parser.set_date_parser(config.date.local_tz, config.date.cli_input_str)
    term = blessings.Terminal()
    with dbmodel.Store(config.path.store, config.path.cache) as store:
        # execute command
        exit_code = cmds[args.cmd].main(store, args, config, term)
    sys.exit(exit_code)

if __name__ == "__main__":
    main()
